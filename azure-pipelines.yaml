trigger:
- master

resources:
- repo: self

# variables:
#   tag: 'TestV2' 
  
stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:       
    - task: Docker@2
      displayName: Build a test client image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/client/Dockerfile.dev'
        repository: 'steedman/react-test'
        buildContext: '$(Build.SourcesDirectory)/client'

    - task: Bash@3
      displayName: grep docker images
      inputs:
        targetType: 'inline'
        script: docker images | grep steedman

    - task: Bash@3
      displayName: docker tests
      inputs:
        targetType: 'inline'
        script: docker run -e CI=true steedman/react-test:$(tag) npm test
        # tags: |
        #   $(tag)

    - task: Docker@2
      displayName: docker multi-client image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/client/Dockerfile'
        repository: 'steedman/multi-client'
        buildContext: '$(Build.SourcesDirectory)/client'

    - task: Docker@2
      displayName: docker multi-nginx image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/nginx/Dockerfile'
        repository: 'steedman/multi-nginx'
        buildContext: '$(Build.SourcesDirectory)/nginx'

    - task: Docker@2
      displayName: docker multi-server image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/server/Dockerfile'
        repository: 'steedman/multi-server'
        buildContext: '$(Build.SourcesDirectory)/server'

    - task: Docker@2
      displayName: docker multi-worker image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/worker/Dockerfile'
        repository: 'steedman/multi-worker'
        buildContext: '$(Build.SourcesDirectory)/worker'

    - task: Bash@3
      displayName: grep docker images
      inputs:
        targetType: 'inline'
        script: docker images | grep steedman
#     - task: Docker@2
#       displayName: Login to Docker Hub
#       inputs:
#         command: login
#         containerRegistry: steedman_dockerHub

#     - task: Docker@2
#       displayName: 'Push the Docker image to Dockerhub'
#       inputs:
#         repository: 'steedman/testazdo'
#         command: 'push'
#         tags: |
#           $(tag)

#     - task: Docker@2
#       displayName: Logout of ACR
#       inputs:
#         command: logout
#         containerRegistry: steedman_dockerHub

# - stage: Deploy
#   displayName: Deploy to AWS beanstalk
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: windows-latest
#     steps:       
#     - task: Bash@3
#       displayName: TempFile
#       inputs:
#         targetType: 'inline'
#         script: echo "hi there" > testFile.txt

#     - task: AWSCLI@1
#       displayName: AddTempFileToS3
#       inputs:
#         awsCredentials: 'aws4'
#         regionName: 'eu-west-1'
#         awsCommand: 's3'
#         awsSubCommand: 'cp'
#         awsArguments: 'testFile.txt s3://elasticbeanstalk-eu-west-1-498738601876'